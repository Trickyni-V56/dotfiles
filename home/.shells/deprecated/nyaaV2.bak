#!/usr/bin/env python3
import os
import re
import argparse

log = os.path.join(os.path.expanduser("~"), ".local", "share", "qBittorrent", "logs", "qbittorrent.log")
changeflag=False

parser = argparse.ArgumentParser()
parser.add_argument('-e','--ext', default="mkv")
parser.add_argument('-f','--force', action='store_true', default=False)
args = parser.parse_args()

ext="."+args.ext

def sanitize(file):
    global changeflag
    rename = re.sub(r'\s?(?:\(.*?\)|\[.*?\])\s?', '', file)
    rename = re.sub(r'\s', '-', rename)
    if rename != file:
        print ("\033[33m"+file+"\033[0m"+" ---> "+"\033[97m"+rename+"\033[0m")
        changeflag=True
        os.rename(file, rename)

def logsearch(file):
    # addpatt=re.compile(r'Added new torrent. Torrent: \""+file+"\""')
    addpatt=rf'Added new torrent\. Torrent: "{re.escape(file)}"'
    finpatt=rf'Torrent download finished\. Torrent: "{re.escape(file)}"'
    with open(log, 'r') as qbitlog:
        content = qbitlog.read()
    # for file in os.listdir(os.getcwd()):
        added=finished=False
        if re.search(addpatt, content):
            added=True
        if re.search(finpatt, content):
            finished=True
        if added and not finished:
            return False
        else:
            return True


#    main
for file in os.listdir(os.getcwd()):
    if file.endswith(ext):
        if args.force:
            sanitize(file)
        elif logsearch(file)==True:
            sanitize(file)
        elif logsearch(file)==False:
            print ("\033[33m\"" +file+ "\" "+"\033[0mseems to still be downloading...")
if changeflag==False:
    print ("\033[92m"+"Nothing to change!"+"\033[0m")




